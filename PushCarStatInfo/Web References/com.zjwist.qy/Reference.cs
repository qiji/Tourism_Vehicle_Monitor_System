//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34003
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.34003 版自动生成。
// 
#pragma warning disable 1591

namespace PushCarStatInfo.com.zjwist.qy {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CarStatByDaySoap", Namespace="http://tempuri.org/")]
    public partial class CarStatByDay : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback StatCarInfoForSendMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback WithOutCarInfoMore30MinOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CarStatByDay() {
            this.Url = global::PushCarStatInfo.Properties.Settings.Default.PushCarStatInfo_com_zjwist_qy_CarStatByDay;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event StatCarInfoForSendMessageCompletedEventHandler StatCarInfoForSendMessageCompleted;
        
        /// <remarks/>
        public event WithOutCarInfoMore30MinCompletedEventHandler WithOutCarInfoMore30MinCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StatCarInfoForSendMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StatCarInfoForSendMessage(string carday) {
            this.Invoke("StatCarInfoForSendMessage", new object[] {
                        carday});
        }
        
        /// <remarks/>
        public void StatCarInfoForSendMessageAsync(string carday) {
            this.StatCarInfoForSendMessageAsync(carday, null);
        }
        
        /// <remarks/>
        public void StatCarInfoForSendMessageAsync(string carday, object userState) {
            if ((this.StatCarInfoForSendMessageOperationCompleted == null)) {
                this.StatCarInfoForSendMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatCarInfoForSendMessageOperationCompleted);
            }
            this.InvokeAsync("StatCarInfoForSendMessage", new object[] {
                        carday}, this.StatCarInfoForSendMessageOperationCompleted, userState);
        }
        
        private void OnStatCarInfoForSendMessageOperationCompleted(object arg) {
            if ((this.StatCarInfoForSendMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatCarInfoForSendMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WithOutCarInfoMore30Min", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WithOutCarInfoMore30Min() {
            this.Invoke("WithOutCarInfoMore30Min", new object[0]);
        }
        
        /// <remarks/>
        public void WithOutCarInfoMore30MinAsync() {
            this.WithOutCarInfoMore30MinAsync(null);
        }
        
        /// <remarks/>
        public void WithOutCarInfoMore30MinAsync(object userState) {
            if ((this.WithOutCarInfoMore30MinOperationCompleted == null)) {
                this.WithOutCarInfoMore30MinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWithOutCarInfoMore30MinOperationCompleted);
            }
            this.InvokeAsync("WithOutCarInfoMore30Min", new object[0], this.WithOutCarInfoMore30MinOperationCompleted, userState);
        }
        
        private void OnWithOutCarInfoMore30MinOperationCompleted(object arg) {
            if ((this.WithOutCarInfoMore30MinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WithOutCarInfoMore30MinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void StatCarInfoForSendMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void WithOutCarInfoMore30MinCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591